<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<bean id="memberDao" class="kr.or.ddit.member.dao.MemberDao"/>
	
	<bean id="memberDaoProto" class="kr.or.ddit.member.dao.MemberDao" scope="prototype"/>

	<!-- 빈을 주입하는 방법
		1.setter
		2.constructor
	 -->	
	<bean id="memberService" class="kr.or.ddit.member.service.MemberService">
		<!-- property : 자바객체의 속성을(private MemberDaoInf memberDao;) -->
		<!-- setter method를 이용한 bean 주입 -->
		<property name="memberDao" ref="memberDao"/>
	</bean> 
	
	<bean id="memberServiceSec" class="kr.or.ddit.member.service.MemberService">
		<!-- constructor(생성자)를 이용한 bean 주입 -->
		<constructor-arg ref="memberDao"/>
	</bean>
	
	<!-- id = memberServiceSingle (scope:singleton)
		 id = memberDaoProto(scope:prototype)
		 memberServiceSingle bean에 memberDaoProto bean을 주입
		 memberServiceSingle.getMemberDao()를 호출하여 리턴받은 memberDao객체는 
		 prototype scope를 유지하는가?
	 -->
<!-- 	 싱글톤 안의 프로토타입을 확인 -->
	 <bean id="memberServiceSingle" class="kr.or.ddit.member.service.MemberService">
	 	<property name="memberDao" ref="memberDaoProto"></property>
	 </bean>
	 
	 
</beans>










